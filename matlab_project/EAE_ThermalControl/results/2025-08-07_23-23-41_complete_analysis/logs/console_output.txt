=====================================
 EAE THERMAL CONTROL SYSTEM ANALYSIS
=====================================

Session: 2025-08-07_23-23-41
Results folder: results\2025-08-07_23-23-41_complete_analysis

Loading system parameters...
Parameters loaded into workspace as 'params'
Creating thermal system model...
Creating thermal system model...

System Model Properties:
------------------------
Gain Margin: 62.04 dB at 0.14 rad/s
Phase Margin: Inf degrees at NaN rad/s
Dominant pole: -0.0017
System order: 3

✓ Thermal model created successfully
Performing Ziegler-Nichols tuning...

========================================
   Ziegler-Nichols PID Tuning
========================================

1. Reaction Curve Method
------------------------
Process Parameters:
  Delay (L): 46.870 seconds
  Time Constant (T): 502.398 seconds
  Static Gain (K): 0.749

Reaction Curve PID Parameters:
  Kp = 17.173
  Ki = 0.183
  Kd = 402.443

2. Ultimate Gain Method
------------------------
System has delays - using Pade approximation
System is very stable - using estimated parameters
Critical Parameters:
  Critical Gain (Kc): 100.000
  Critical Period (Pc): 10.000 seconds
  Critical Frequency: 0.628 rad/s

Ultimate Gain PID Parameters:
  Kp = 60.000
  Ki = 12.000
  Kd = 75.000

3. Initial PID Parameters (Average)
------------------------------------
  Kp = 38.586
  Ki = 6.092
  Kd = 238.722

4. Simulating System Response
------------------------------
Performance Metrics:
  Rise Time: 29.43 seconds
  Settling Time: 296.36 seconds
  Overshoot: 0.00%
  Peak: 63.89
  Steady-State Error: 64.8900

✓ Ziegler-Nichols tuning completed
  Saved figure: Ziegler_Nichols_Tuning.fig
  Saved figure: Ziegler_Nichols_Tuning.png (using exportgraphics)
  Saved figure: Ziegler_Nichols_Tuning.eps (vector format)
Optimizing PID parameters...

========================================
   PID Parameter Optimization
========================================

1. Pattern Search Optimization
------------------------------
Scaling down initial PID values (too aggressive)


Iter     Func-count       f(x)      MeshSize     Method
    0           1    3.96313e+06             1      
    1           2    3.29752e+06             2     Successful Poll
    2           2    3.29752e+06             1     Refine Mesh
    3           3    3.29752e+06           0.5     Refine Mesh
    4           6    3.29725e+06             1     Successful Poll
    5           7    3.29725e+06           0.5     Refine Mesh
    6          10    3.29725e+06          0.25     Refine Mesh
    7          15    2.65004e+06           0.5     Successful Poll
    8          18    2.23316e+06             1     Successful Poll
    9          19    2.23316e+06           0.5     Refine Mesh
   10          23    1.82927e+06             1     Successful Poll
   11          25    1.82927e+06           0.5     Refine Mesh
   12          28    1.82927e+06          0.25     Refine Mesh
   13          31    1.82927e+06         0.125     Refine Mesh
   14          36         551092          0.25     Successful Poll
   15          39         529753           0.5     Successful Poll
   16          42         529753          0.25     Refine Mesh
   17          46         529753         0.125     Refine Mesh
   18          51         430967          0.25     Successful Poll
   19          54         430967         0.125     Refine Mesh
   20          59         430949          0.25     Successful Poll
   21          62         430949         0.125     Refine Mesh
   22          66         430949        0.0625     Refine Mesh
   23          71         430941         0.125     Successful Poll
   24          75         430941        0.0625     Refine Mesh
   25          79         430941       0.03125     Refine Mesh
   26          83         408200        0.0625     Successful Poll
   27          87         408200       0.03125     Refine Mesh
   28          91         408200       0.01562     Refine Mesh
   29          96         408200      0.007812     Refine Mesh
   30         101         402675       0.01562     Successful Poll

Iter     Func-count        f(x)       MeshSize      Method
   31         106         402675      0.007812     Refine Mesh
   32         111         402675      0.003906     Refine Mesh
   33         116         402675      0.001953     Refine Mesh
   34         122         401292      0.003906     Successful Poll
   35         127         401292      0.001953     Refine Mesh
   36         133         401292      0.003906     Successful Poll
   37         138         401292      0.001953     Refine Mesh
   38         143         401292     0.0009766     Refine Mesh
   39         149         401292      0.001953     Successful Poll
   40         154         401292     0.0009766     Refine Mesh
   41         159         401292     0.0004883     Refine Mesh
   42         164         401292     0.0002441     Refine Mesh
   43         169         401119     0.0004883     Successful Poll
   44         174         401119     0.0002441     Refine Mesh
   45         179         401119     0.0001221     Refine Mesh
   46         185         401032     0.0002441     Successful Poll
   47         190         401032     0.0001221     Refine Mesh
   48         196         401032     0.0002441     Successful Poll
   49         201         401032     0.0001221     Refine Mesh
   50         206         401032     6.104e-05     Refine Mesh
   51         212         401032     0.0001221     Successful Poll
   52         217         401032     6.104e-05     Refine Mesh
   53         222         401032     3.052e-05     Refine Mesh
   54         228         401011     6.104e-05     Successful Poll
   55         233         401011     3.052e-05     Refine Mesh
   56         239         401011     6.104e-05     Successful Poll
   57         244         401011     3.052e-05     Refine Mesh
   58         249         401011     1.526e-05     Refine Mesh
   59         255         401011     3.052e-05     Successful Poll
   60         260         401011     1.526e-05     Refine Mesh

Iter     Func-count        f(x)       MeshSize      Method
   61         265         401011     7.629e-06     Refine Mesh
   62         271         401011     1.526e-05     Successful Poll
   63         276         401011     7.629e-06     Refine Mesh
   64         281         401011     3.815e-06     Refine Mesh
   65         286         401008     7.629e-06     Successful Poll
   66         291         401008     3.815e-06     Refine Mesh
   67         296         401008     1.907e-06     Refine Mesh
   68         301         401008     9.537e-07     Refine Mesh
patternsearch stopped because the mesh size was less than options.MeshTolerance.
Pattern Search Results:
  Kp = 9.3313, Ki = 0.0787, Kd = 2.0000
  Cost = 401007.9078

2. Genetic Algorithm Optimization
----------------------------------

Single objective optimization:
3 Variables

Options:
CreationFcn:       @gacreationuniform
CrossoverFcn:      @crossoverscattered
SelectionFcn:      @selectionstochunif
MutationFcn:       @mutationadaptfeasible

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
    1              100       5.868e+05       2.729e+06        0
    2              145       5.868e+05       4.024e+06        0
    3              190       5.783e+05       1.663e+06        0
    4              235       5.295e+05       1.246e+06        0
    5              280       5.293e+05       1.112e+06        0
    6              325       4.545e+05       8.692e+05        0
    7              370       4.543e+05       8.782e+05        0
    8              415       4.543e+05        7.54e+05        0
    9              460       4.543e+05        8.64e+05        1
   10              505         4.1e+05       6.903e+05        0
   11              550       4.099e+05       6.332e+05        0
   12              595       4.097e+05       5.895e+05        0
   13              640       4.097e+05       6.648e+05        1
   14              685       4.097e+05       7.229e+05        2
   15              730       3.884e+05       6.535e+05        0
   16              775       3.884e+05       6.219e+05        1
   17              820       3.884e+05        5.22e+05        2
   18              865       3.884e+05       5.566e+05        3
   19              910       3.832e+05        5.13e+05        0
   20              955       3.832e+05         5.1e+05        1
   21             1000       3.808e+05       4.885e+05        0
   22             1045       3.808e+05        4.75e+05        0
   23             1090       3.807e+05       4.607e+05        0
   24             1135       3.807e+05        5.53e+05        1
   25             1180       3.807e+05       4.791e+05        2
   26             1225       3.807e+05       4.496e+05        3
   27             1270       3.807e+05       4.363e+05        4
   28             1315       3.807e+05       4.392e+05        5
   29             1360       3.807e+05       4.326e+05        6
   30             1405       3.807e+05       4.237e+05        7

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
   31             1450       3.807e+05       4.255e+05        8
   32             1495       3.807e+05       4.246e+05        9
   33             1540       3.807e+05       4.185e+05       10
   34             1585       3.807e+05       4.253e+05       11
   35             1630       3.807e+05        4.21e+05       12
   36             1675       3.807e+05       4.171e+05       13
   37             1720       3.807e+05        4.19e+05       14
   38             1765       3.807e+05       4.169e+05       15
   39             1810       3.807e+05       4.168e+05       16
   40             1855       3.807e+05       4.137e+05       17
   41             1900       3.807e+05       4.132e+05       18
   42             1945       3.807e+05       4.111e+05       19
   43             1990       3.807e+05       4.132e+05       20
   44             2035       3.807e+05       4.185e+05       21
   45             2080       3.807e+05       4.134e+05       22
   46             2125       3.807e+05       4.186e+05       23
   47             2170       3.807e+05       4.185e+05       24
   48             2215       3.807e+05       4.163e+05       25
   49             2260       3.807e+05       4.188e+05       26
   50             2305       3.807e+05       4.165e+05       27
   51             2350       3.807e+05       4.213e+05       28
   52             2395       3.807e+05        4.14e+05       29
   53             2440       3.807e+05       4.011e+05       30
   54             2485       3.807e+05       4.081e+05       31
   55             2530       3.807e+05       4.084e+05       32
   56             2575       3.807e+05       4.082e+05       33
   57             2620       3.807e+05       4.037e+05       34
   58             2665       3.807e+05       4.085e+05       35
   59             2710       3.807e+05       4.188e+05       36
   60             2755       3.807e+05       4.134e+05       37

                                  Best           Mean      Stall
Generation      Func-count        f(x)           f(x)    Generations
   61             2800       3.807e+05       4.207e+05       38
   62             2845       3.807e+05       4.235e+05       39
   63             2890       3.807e+05       4.161e+05       40
   64             2935       3.807e+05       4.189e+05       41
   65             2980       3.807e+05       4.187e+05       42
   66             3025       3.807e+05       4.033e+05       43
   67             3070       3.807e+05       4.181e+05       44
   68             3115       3.807e+05       4.183e+05       45
   69             3160       3.807e+05       4.113e+05       46
   70             3205       3.807e+05       4.136e+05       47
   71             3250       3.807e+05       4.082e+05       48
   72             3295       3.807e+05       4.204e+05       49
   73             3340       3.807e+05        4.16e+05       50
ga stopped because the average change in the fitness value is less than options.FunctionTolerance.
Genetic Algorithm Results:
  Kp = 9.7535, Ki = 0.0700, Kd = 0.6956
  Cost = 380734.0697

3. Particle Swarm Optimization
-------------------------------

                                 Best            Mean     Stall
Iteration     f-count            f(x)            f(x)    Iterations
    0              30       9.644e+05       3.518e+06        0
    1              60       3.622e+05       4.039e+06        0
    2              90        3.62e+05        1.43e+06        0
    3             120        3.62e+05       6.394e+05        1
    4             150        3.62e+05       4.095e+05        2
    5             180        3.62e+05       3.736e+05        3
    6             210        3.62e+05        3.62e+05        4
    7             240        3.62e+05        3.62e+05        5
    8             270        3.62e+05        3.62e+05        6
    9             300        3.62e+05        3.62e+05        7
   10             330        3.62e+05        3.62e+05        8
   11             360        3.62e+05        3.62e+05        9
   12             390        3.62e+05        3.62e+05       10
   13             420        3.62e+05        3.62e+05       11
   14             450        3.62e+05        3.62e+05       12
   15             480        3.62e+05        3.62e+05       13
   16             510        3.62e+05        3.62e+05       14
   17             540        3.62e+05        3.62e+05       15
   18             570        3.62e+05        3.62e+05       16
   19             600        3.62e+05        3.62e+05       17
   20             630        3.62e+05        3.62e+05       18
   21             660        3.62e+05        3.62e+05       19
Optimization ended: relative change in the objective value 
over the last OPTIONS.MaxStallIterations iterations is less than OPTIONS.FunctionTolerance.
Particle Swarm Results:
  Kp = 10.0000, Ki = 0.0000, Kd = 0.0000
  Cost = 361988.1703

4. Best Optimization Method: Particle Swarm
-----------------------------------

5. Iterative Refinement
------------------------
  Iteration 1: Kp=10.5000, Ki=0.0000, Kd=0.0000
  Iteration 2: Kp=11.0250, Ki=0.0000, Kd=0.0000
  Iteration 3: Kp=11.5763, Ki=0.0000, Kd=0.0000
  Iteration 4: Kp=12.1551, Ki=0.0000, Kd=0.0000
  Iteration 5: Kp=12.7628, Ki=0.0000, Kd=0.0000
  Iteration 6: Kp=12.7309, Ki=0.0000, Kd=0.0000
  Iteration 7: Kp=12.6991, Ki=0.0000, Kd=0.0000
  Iteration 8: Kp=12.6673, Ki=0.0000, Kd=0.0000
  Iteration 9: Kp=12.6357, Ki=0.0000, Kd=0.0000
  Iteration 10: Kp=12.6041, Ki=0.0000, Kd=0.0000
  Iteration 11: Kp=12.5726, Ki=0.0000, Kd=0.0000
  Iteration 12: Kp=12.5411, Ki=0.0000, Kd=0.0000
  Iteration 13: Kp=12.5098, Ki=0.0000, Kd=0.0000
  Iteration 14: Kp=12.4785, Ki=0.0000, Kd=0.0000
  Iteration 15: Kp=12.4473, Ki=0.0000, Kd=0.0000
  Iteration 16: Kp=12.4162, Ki=0.0000, Kd=0.0000
  Iteration 17: Kp=12.3852, Ki=0.0000, Kd=0.0000
  Iteration 18: Kp=13.0044, Ki=0.0000, Kd=0.0000
  Iteration 19: Kp=12.9719, Ki=0.0000, Kd=0.0000
  Iteration 20: Kp=12.9395, Ki=0.0000, Kd=0.0000

6. Comparison with C++ Implementation
--------------------------------------
C++ Implementation:  Kp=2.5, Ki=0.5, Kd=0.10
MATLAB Optimized:    Kp=12.9395, Ki=0.0000, Kd=0.0000
Final Blended:       Kp=9.8076, Ki=0.1500, Kd=0.0300

✓ PID optimization completed

Running control strategy comparison...
  Saved figure: Control_Strategy_Comparison.fig
  Saved figure: Control_Strategy_Comparison.png (using exportgraphics)
  Saved figure: Control_Strategy_Comparison.eps (vector format)
Running robustness analysis...
  Saved figure: Robustness_Analysis.fig
  Saved figure: Robustness_Analysis.png (using exportgraphics)
  Saved figure: Robustness_Analysis.eps (vector format)

Saving all data and workspace...
Generating HTML report...
  HTML report saved: analysis_report.html

========================================
   Analysis Complete!
========================================
Results saved to: results\2025-08-07_23-23-41_complete_analysis

PID Evolution:
  Ziegler-Nichols: Kp=38.586, Ki=6.092, Kd=238.722
  Optimized:       Kp=9.808, Ki=0.150, Kd=0.030
  C++ Reference:   Kp=2.500, Ki=0.500, Kd=0.100

Saved files:
  Plots:
    - Control_Strategy_Comparison.eps (62.9 KB)
    - Control_Strategy_Comparison.fig (50.6 KB)
    - Control_Strategy_Comparison.png (356.9 KB)
    - Robustness_Analysis.eps (127.5 KB)
    - Robustness_Analysis.fig (111.3 KB)
    - Robustness_Analysis.png (397.5 KB)
    - Ziegler_Nichols_Tuning.eps (63.6 KB)
    - Ziegler_Nichols_Tuning.fig (63.0 KB)
    - Ziegler_Nichols_Tuning.png (484.6 KB)
  Data:
    - complete_results.mat (10.2 KB)
  Logs:
    - console_output.txt (1.6 KB)
  Report: analysis_report.html
