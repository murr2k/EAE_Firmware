name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    name: Code Coverage Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ gcovr lcov

    - name: Configure with coverage flags
      run: |
        cmake -B build-coverage \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage"

    - name: Build
      run: cmake --build build-coverage

    - name: Run tests
      run: |
        cd build-coverage
        ./eae_tests

    - name: Generate coverage report
      run: |
        cd build-coverage
        gcovr -r .. --html --html-details -o coverage.html \
          --exclude '.*/tests/.*' \
          --exclude '.*/build.*/.*' \
          --exclude '.*/include/.*' \
          --exclude '.*/external/.*' \
          --exclude '.*/_deps/.*'
        
        # Also generate lcov report with error suppression
        lcov --capture --directory . --output-file coverage.info --ignore-errors mismatch
        lcov --remove coverage.info '/usr/*' '*/tests/*' '*/build*/*' '*/_deps/*' --output-file coverage.info --ignore-errors mismatch
        lcov --list coverage.info || echo "Coverage report generated (ignoring exit code)"

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          build-coverage/coverage.html
          build-coverage/coverage.*.html
          build-coverage/coverage.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: build-coverage/coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false